Elastic search aggregations
---------------------------

1. Metric aggregations
i. sum, min, max, avg, cardinality (unique)
GET ecommerce_data/_search
{
    "aggs": {
        "sum_unit_price": {
            "sum": {
                "field": "UnitPrice"
            }
        }
    },
    "size": 0 // ignore hits
}
{
    "aggregations": {
        "sum_unit_price": {
            "value": 1876200.97
        }
    }
}

ii. stats aggregation - all metrics in one query
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "all_stats_unit_price": {
      "stats": {
        "field": "UnitPrice"
      }
    }
  }
}
{
    "aggregations": {
        "all_stats_unit_price": {
            "count": 426841,
            "min": 1.01,
            "max": 498.79,
            "avg": 4.39555000291677,
            "sum": 1876200.97
        }
    }
}

iii. Query + Aggregations - perform aggregation on subset of documents
GET ecommerce_data/_search
{
  "size": 0,
  "query": {
    "match": {
      "Country": "Germany"
    }
  },
  "aggs": {
    "germany_average_unit_price": {
      "avg": {
        "field": "UnitPrice"
      }
    }
  }
}

2. Bucket aggregations - perform aggregation on several subsets of documents
i. Date histogram aggregation - fixed interval or calendar interval
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "transactions_by_8_hrs": {
      "date_histogram": {
        "field": "InvoiceDate",
        "fixed_interval": "8h",
        // "calendar_interval": "1M", // monthly bucket
        "order": {
            "_key": "desc" // key will be the date timestamp in elastic search result set
        }
      }
    }
  }
}

ii. Histogram aggregation - any numeric interval
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "transactions_per_price_interval": {
      "histogram": {
        "field": "UnitPrice",
        "interval": 10, // interval size of 10
        "order": {
          "_key": "desc" // key will be the price interval in elastic search result set
        }
      }
    }
  }
}

iii. Range aggregation - any numeric interval of varying sizes (custom interval)
lower limit included, upper limit excluded
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "transactions_per_custom_price_ranges": {
      "range": {
        "field": "UnitPrice",
        "ranges": [
          {
            "to": 50
          },
          {
            "from": 50,
            "to": 200
          },
          {
            "from": 200
          }
        ]
      }
    }
  }
}
cannot sort range aggregations

iv. Terms aggregation - bucket for every unique term encountered in specified field
by default sort in decreasing order
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "top_5_customers": {
      "terms": {
        "field": "CustomerID",
        "size": 5 // top 5 customers based on number of transactions. one transaction is one document
      }
    }
  }
}

sorting in increasing order implies lowest number of transactions
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "5_customers_with_lowest_number_of_transactions": {
      "terms": {
        "field": "CustomerID",
        "size": 5,
        "order": {
          "_count": "asc" // count will be the document count in elastic search result set
        }
      }
    }
  }
}

3. Combined aggregations - Bucket + Metric aggregations
GET ecommerce_data/_search
{
  "size": 0,
  "aggs": {
    "transactions_per_day": { // bucket aggregation
      "date_histogram": {
        "field": "InvoiceDate",
        "calendar_interval": "day",
        "order": {
          "daily_revenue": "desc" // order by sub aggregation. by default it orders by bucket which is calendar interval
        }
      },
      "aggs": {
        "daily_revenue": {
          "sum": {
            "script": { // calculate dynamically based on values in document
              "source": "doc['UnitPrice'].value * doc['Quantity'].value"
            }
          }
        },
        "number_of_unique_customers_per_day": { // multiple metric aggregations
          "cardinality": {
            "field": "CustomerID"
          }
        }
      }
    }
  }
}
